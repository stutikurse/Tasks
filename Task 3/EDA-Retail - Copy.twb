<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook original-version='18.1' source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='SampleSuperstore' inline='true' name='federated.1bt18yx0tup1sd10z8cag0w9j2kd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore' name='textscan.0xunpig1f826ti17zp6w31y6h3ft'>
            <connection class='textscan' directory='C:/Users/deskt/Desktop/New folder/Task 3' filename='SampleSuperstore.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0xunpig1f826ti17zp6w31y6h3ft' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0xunpig1f826ti17zp6w31y6h3ft' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore.csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore.csv' id='SampleSuperstore.csv_D48F919A749C4E9680F21C7935261B31'>
            <properties context=''>
              <relation connection='textscan.0xunpig1f826ti17zp6w31y6h3ft' name='SampleSuperstore.csv' table='[SampleSuperstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1bt18yx0tup1sd10z8cag0w9j2kd'>
      <datasources>
        <datasource caption='SampleSuperstore' name='federated.1bt18yx0tup1sd10z8cag0w9j2kd' />
      </datasources>
      <datasource-dependencies datasource='federated.1bt18yx0tup1sd10z8cag0w9j2kd'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
        <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:City:nk]'>
        <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk]'>
        <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]'>
        <groupfilter function='level-members' level='[none:Ship Mode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Quantity:qk]' included-values='in-range'>
        <min>47</min>
        <max>3015</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='category'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1bt18yx0tup1sd10z8cag0w9j2kd' />
          </datasources>
          <datasource-dependencies datasource='federated.1bt18yx0tup1sd10z8cag0w9j2kd'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='Count' name='[cnt:Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:City:nk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Quantity:qk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[cnt:Category:qk]</rows>
        <cols>([federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk] / [federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk])</cols>
      </table>
      <simple-id uuid='{2831970B-F7B7-4A72-8065-37A033D2BDB9}' />
    </worksheet>
    <worksheet name='profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1bt18yx0tup1sd10z8cag0w9j2kd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bt18yx0tup1sd10z8cag0w9j2kd'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:City:nk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Quantity:qk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Profit:qk]</rows>
        <cols>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{A81426DF-3C2D-482A-A284-3467012C16E8}' />
    </worksheet>
    <worksheet name='profit by city'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1bt18yx0tup1sd10z8cag0w9j2kd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bt18yx0tup1sd10z8cag0w9j2kd'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:City:nk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Quantity:qk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:City:nk]' />
              <lod column='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[Latitude (generated)]</rows>
        <cols>([federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Country:nk] * [federated.1bt18yx0tup1sd10z8cag0w9j2kd].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{A20734AA-4A73-4483-B482-B781F154591B}' />
    </worksheet>
    <worksheet name='quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1bt18yx0tup1sd10z8cag0w9j2kd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bt18yx0tup1sd10z8cag0w9j2kd'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:City:nk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Quantity:qk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Discount:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Sub-Category:nk]</rows>
        <cols>([federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Segment:nk] * [federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Quantity:qk])</cols>
      </table>
      <simple-id uuid='{8E2A92E7-83FC-414A-BA2D-C12C688FACA3}' />
    </worksheet>
    <worksheet name='sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='SampleSuperstore' name='federated.1bt18yx0tup1sd10z8cag0w9j2kd' />
          </datasources>
          <datasource-dependencies datasource='federated.1bt18yx0tup1sd10z8cag0w9j2kd'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:City:nk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Quantity:qk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk]</column>
            <column>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Sales:qk]' palette='blue_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:State:nk]' />
              <size column='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Discount:qk]</rows>
        <cols>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{1D6816A9-E1D6-463E-A439-255A6CD38A38}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='superstore'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='SampleSuperstore' name='federated.1bt18yx0tup1sd10z8cag0w9j2kd' />
      </datasources>
      <datasource-dependencies datasource='federated.1bt18yx0tup1sd10z8cag0w9j2kd'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
        <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88625' id='11' param='horz' type-v2='layout-flow' w='98666' x='667' y='10375'>
            <zone h='88625' id='9' type-v2='layout-basic' w='98666' x='667' y='10375'>
              <zone h='44312' id='3' name='category' show-title='false' w='24667' x='49998' y='54688'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44313' id='5' name='profit' show-title='false' w='45124' x='54209' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44312' id='6' name='quantity' show-title='false' w='49331' x='667' y='54688'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44312' id='7' name='sales' show-title='false' w='24668' x='74665' y='54688'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44313' id='8' name='profit by city' show-title='false' w='53542' x='667' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9375' id='20' type-v2='layout-flow' w='31333' x='667' y='1000'>
            <zone h='6500' id='12' mode='dropdown' name='profit by city' param='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:City:nk]' type-v2='filter' values='database' w='31333' x='667' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='9375' id='13' name='quantity' param='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Quantity:qk]' type-v2='filter' values='database' w='25583' x='73750' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='9375' id='14' mode='dropdown' name='category' param='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk]' type-v2='filter' values='database' w='17750' x='56000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='9375' id='15' mode='dropdown' name='category' param='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]' type-v2='filter' values='database' w='24000' x='32000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type-v2='layout-flow' w='98666' x='667' y='1000'>
                <zone h='6500' id='12' mode='dropdown' name='profit by city' param='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:City:nk]' type-v2='filter' values='database' w='31333' x='667' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44313' id='8' is-fixed='true' name='profit by city' show-title='false' w='53542' x='667' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44313' id='5' is-fixed='true' name='profit' show-title='false' w='45124' x='54209' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='13' name='quantity' param='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Quantity:qk]' type-v2='filter' values='database' w='25583' x='73750' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44312' id='6' is-fixed='true' name='quantity' show-title='false' w='49331' x='667' y='54688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='14' mode='dropdown' name='category' param='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk]' type-v2='filter' values='database' w='17750' x='56000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='15' mode='dropdown' name='category' param='[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]' type-v2='filter' values='database' w='24000' x='32000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44312' id='3' is-fixed='true' name='category' show-title='false' w='24667' x='49998' y='54688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44312' id='7' is-fixed='true' name='sales' show-title='false' w='24668' x='74665' y='54688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{15447718-779C-4F11-BC67-78BBBCA159DD}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Category:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:City:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0CE3295-2899-4ED0-A01E-5CF99728F53D}' />
    </window>
    <window class='worksheet' name='profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Country:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E10C8ED-7DDA-4AD0-B0D8-B4F6F2BBA38D}' />
    </window>
    <window class='worksheet' name='quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[:Measure Names]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Segment:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:State:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Sub-Category:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[sum:Discount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58B691A7-7A29-4261-946B-D208E7AF904C}' />
    </window>
    <window class='worksheet' name='sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[:Measure Names]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Region:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CA4A312-D805-481A-9FAF-D4A734174F56}' />
    </window>
    <window class='worksheet' name='profit by city'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:City:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Country:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:Segment:nk]</field>
            <field>[federated.1bt18yx0tup1sd10z8cag0w9j2kd].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E3C26AA-B8D3-4FAB-9534-C24A51A841C1}' />
    </window>
    <window class='dashboard' maximized='true' name='superstore'>
      <viewpoints>
        <viewpoint name='category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='profit by city'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='quantity' />
        <viewpoint name='sales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6F422C4A-6743-4ED6-93D4-A002F523063A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='profit by city' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='quantity' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='sales' width='192'>
      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
      gYSW5j8A3zGTW5aRc7sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='superstore' width='192'>
      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
      jRa3uwvUbv4/M4Uce1l2cjsAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
